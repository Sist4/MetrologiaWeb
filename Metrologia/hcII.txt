Private Sub hcII(codigobpr As String)
        'Dim ccn = objcon.ccn
        Dim unidad_base As String
        Dim unidad As String
        Dim vector_exct(5) As String
        Dim vector_rep(5) As String
        Dim vector_IncertHisteresis As String()
        Dim vector_nominal As String()
        Dim vector_convencional As String()
        Dim valor_d As String
        Dim vector_numeral As String()
        Dim vector_u_std_patron As Double()
        Dim vector_emp_patron As Double()
        Dim vector_u_deriva_patron As Double()
        Dim es_sustitucion As String()
        Dim vector_lecasc As String()
        Dim vector_errasc As String()
        Dim vector_lecdsc As String()
        Dim vector_errdsc As String()
        Dim k As String()
        Dim U_reporte As String()
        Dim crg_conv_eii As String = ""
        Dim inc_patron_eii As String = ""
        Dim emp_patron_eii As String = ""
        Dim inc_deriva_eii As String = ""
        Dim umref_const As String = "" '0 'mantiene el valor del último indice sin carga de sustitución para los vectores uref & ui
        Dim n_de_sust As Integer = 2
        Dim vector_uref As String()
        'variables que soportan los valores que originalmente se colocaban en etiquetas a pantalla
        Dim lbldescripcion, lblidentificacion, lblmarca, lblmodelo, lblserie, lblcapmaxima, lblubicacion, lblcapuso, lbl_e, lbl_d As String
        Dim lblcap, lblMax_i, lble, lbld, ddlMax_i As String
        Dim lblcmdbpr, lblCarga_exct, lblValCarga_exct, lblValPos1, lblValPos2, lblValPos3, lblValPos4, lblValPos5, lblDifPos1, lblDifPos2, lblDifPos3, lblDifPos4, lblDifPos5, lblValExctMax, lblValEmpExct, lblCumpleExct, lblIncertidumbreExct, lblValExctMax_pc, lblValEmpExct_pc, lblUniRep, lblCargaRep, lblValDifMaxRep, lblValEmpRep, lblCumpleRep, lblValRep1, lblValRep1_0, lblValRep2, lblValRep2_0, lblValRep3, lblValRep3_0, lblValRep4, lblValRep4_0, lblValRep5, lblValRep5_0, lblValRep6, lblValRep6_0 As String
        Dim lblIncertidumbreRep, lblValDifMaxRep_pc, lblValEmpRep_pc As String
        Dim lblIncertidumbreHist As String
        Dim lblCarga_exct2, lblValCarga_exct2, lblValPos1_2, lblValPos2_2, lblValPos3_2, lblValPos4_2, lblValPos5_2, lblDifPos1_2, lblDifPos2_2, lblDifPos3_2, lblDifPos4_2, lblDifPos5_2, lblValExctMax2, lblValEmpExct2, lblIncertidumbreExct2, lblValExctMax_pc2, lblValEmpExct_pc2, lblcrg_nom_eii, lblvalcgrnomeii_1, lblvalcgrnomeii_2, lblval_ures_eii_1, lblval_ures_eii_2, lblval_urept_eii_1, lblval_urept_eii_2, lblval_uexc_eii_1, lblval_uexc_eii_2, lblval_uhist_eii_1, lblval_uhist_eii_2, lblval_urescero_eii_1, lblval_urescero_eii_2, lblval_crgpat_eii, lblval_upat_eii, lblval_emppat_eii, lblval_umb_eii, lblval_udmp_eii, lblval_Amconv_eii, lblval_udmconv_eii, lblUcert, lblUprueb, lblCrgNomErrNor, lblErrExcMaxCerErrNor, lblErrExcMaxPrueErrNor, lblUCertErrNor, lblUPruebErrNor As String
        Dim Str As String
        Dim IdeComBpr As String

        Try
            Str = "select DesBpr,IdentBpr,MarBpr,ModBpr,SerBpr,CapMaxBpr,UbiBpr,CapUsoBpr," & _
                                "DivEscBpr,UniDivEscBpr,DivEsc_dBpr,UniDivEsc_dBpr,DivEscCalBpr,ClaBpr,DivEscCalBpr,CodBpr, " & _
                                "CapCalBpr " & _
                                "from Balxpro where codbpr=" & codigobpr & ""

            Dim Str_ide As String = "select IdeComBpr " & _
                                "from Balxpro where codbpr=" & codigobpr & ""
            Dim ObjCmd_ide As SqlCommand = New SqlCommand(Str_ide, ccn)
            Dim ObjReader_ide = ObjCmd_ide.ExecuteReader
            While (ObjReader_ide.Read())
                IdeComBpr = ObjReader_ide(0).ToString()
            End While
            ObjReader_ide.Close()

            Dim ObjCmd As SqlCommand = New SqlCommand(Str, ccn)
            Dim ObjReader = ObjCmd.ExecuteReader
            While (ObjReader.Read())
                lbldescripcion = (ObjReader(0).ToString())
                lblidentificacion = (ObjReader(1).ToString())
                lblmarca = (ObjReader(2).ToString())
                lblmodelo = (ObjReader(3).ToString())
                lblserie = (ObjReader(4).ToString())
                lblcapmaxima = (ObjReader(5).ToString())
                lblubicacion = (ObjReader(6).ToString())
                lblcapuso = (ObjReader(7).ToString())
                lbl_e = (ObjReader(8).ToString())
                lbl_d = (ObjReader(10).ToString())
                'Asignamos el valor de la división de escala de VIISUALIZACIÓN(d) a valor_d para el cálculo que se realiza en la Incertidumbre de indicación
                valor_d = Val((ObjReader(10).ToString()))
                Dim cap_calc As String = (ObjReader(16).ToString())
                If (ObjReader(12).ToString()) = "e" Then
                    unidad_base = (ObjReader(9).ToString())
                Else
                    unidad_base = (ObjReader(11).ToString())
                End If
                If unidad_base = "g" Then
                    unidad = "[ g ]"
                Else
                    unidad = "[ kg ]"
                End If
                If cap_calc = "max" Then
                    lblcap = "Cap. Max"
                    ddlMax_i = (ObjReader(5).ToString())
                Else
                    lblcap = "Cap. Uso"
                    ddlMax_i = (ObjReader(7).ToString())
                End If
                lblcapmaxima = lblcapmaxima & " " & unidad
                lblcapuso = lblcapuso & " " & unidad
                lblMax_i = lblMax_i & " " & unidad
                lbld = lbld & " " & unidad
                lble = lble & " " & unidad
                lblClase = (ObjReader(13).ToString())
                If (ObjReader(14).ToString()) = "e" Then
                    divCalculo = Val(lbl_e)
                Else
                    divCalculo = Val(lbl_d)
                End If
                lbldivcal = divCalculo
                cal_puntos_cambio_error(Val(ddlMax_i), divCalculo, "II")
                'Asignamos a codigoBpr el id del proyecto que nos servirá para traer los datos del resto de tablas
                codigobpr = (ObjReader(15).ToString())
                lblcmdbpr = codigobpr
                lblCarga_exct = lblCarga_exct & " " & unidad
                Dim Str1 As String = "select CodEii_c,CarEii_c,SatEii_c " & _
                                     "from ExecII_Cab " & _
                                     "where IdeComBpr = '" & IdeComBpr & "' and PrbEii = 1"
                Dim ObjCmd1 As SqlCommand = New SqlCommand(Str1, ccn)
                Dim ObjReader1 = ObjCmd1.ExecuteReader
                While (ObjReader1.Read())
                    lblValCarga_exct = formateo((ObjReader1(1).ToString()), 2)
                    Dim Str2 As String = "select Pos1Eii_d,Pos2Eii_d,Pos3Eii_d,Pos4Eii_d,Pos5Eii_d,ExecMaxEii_d,EmpEii_d " & _
                                        "from ExecII_Det " & _
                                        "where CodEii_c = " & (ObjReader1(0).ToString()) & ""
                    Dim ObjCmd2 As SqlCommand = New SqlCommand(Str2, ccn)
                    Dim ObjReader2 = ObjCmd2.ExecuteReader
                    While (ObjReader2.Read())
                        lblValPos1 = formateo((ObjReader2(0).ToString()), 2)
                        lblValPos2 = formateo((ObjReader2(1).ToString()), 2)
                        lblValPos3 = formateo((ObjReader2(2).ToString()), 2)
                        lblValPos4 = formateo((ObjReader2(3).ToString()), 2)
                        lblValPos5 = formateo((ObjReader2(4).ToString()), 2)
                        lblValExctMax = formateo((ObjReader2(5).ToString()), 2)
                        lblValEmpExct = formateo((ObjReader2(6).ToString()), 2)

                        lblDifPos1 = formateo(Val(lblValPos1) - Val(lblValPos1), 2)
                        vector_exct(0) = Val(lblDifPos1)
                        lblDifPos2 = formateo(Val(lblValPos1) - Val(lblValPos2), 2)
                        vector_exct(1) = Val(lblDifPos2)
                        lblDifPos3 = formateo(Val(lblValPos1) - Val(lblValPos3), 2)
                        vector_exct(2) = Val(lblDifPos3)
                        lblDifPos4 = formateo(Val(lblValPos1) - Val(lblValPos4), 2)
                        vector_exct(3) = Val(lblDifPos4)
                        lblDifPos5 = formateo(Val(lblValPos1) - Val(lblValPos5), 2)
                        vector_exct(4) = Val(lblDifPos5)
                    End While
                    ObjReader2.Close()
                    lblCumpleExct = (ObjReader1(2).ToString())
                    Dim incert As Double = Val(lblValExctMax) / (2 * Val(lblValCarga_exct) * Math.Sqrt(3))
                    lblIncertidumbreExct = incert.ToString("0.000000")
                End While
                ObjReader1.Close()
                Dim i As Integer
                Dim max As Double = 0
                For i = 0 To vector_exct.Length - 1
                    If vector_exct(i) > max Then
                        max = vector_exct(i)
                    End If
                Next
                lblValExctMax_pc = formateo(max, 2)
                lblValEmpExct_pc = emp(lblValCarga_exct)
                lblCumpleExct_pc = satisface(lblValExctMax_pc, lblValEmpExct_pc)
                'Prueba de Repetibilidad
                lblUniRep = unidad
                Str1 = "select CodRii_C,CarRii,DifMaxRii,empRii,SatRii " & _
                                     "from RepetII_Cab " & _
                                     "where IdeComBpr = '" & IdeComBpr & "'"
                ObjCmd1 = New SqlCommand(Str1, ccn)
                ObjReader1 = ObjCmd1.ExecuteReader
                While (ObjReader1.Read())
                    lblCargaRep = formateo((ObjReader1(1).ToString()), 1)
                    lblValDifMaxRep = formateo((ObjReader1(2).ToString()), 2)
                    lblValEmpRep = formateo((ObjReader1(3).ToString()), 2)
                    lblCumpleRep = ObjReader1(4).ToString()
                    Dim Str2 As String = "select Lec1,Lec1_0,Lec2,Lec2_0,Lec3,Lec3_0,Lec4,Lec4_0,Lec5,Lec5_0,Lec6,Lec6_0 " & _
                                         "from RepetII_Det " & _
                                         "where CodRii_C = " & (ObjReader1(0).ToString()) & ""
                    Dim ObjCmd2 As SqlCommand = New SqlCommand(Str2, ccn)
                    Dim ObjReader2 = ObjCmd2.ExecuteReader
                    While (ObjReader2.Read())
                        lblValRep1 = formateo((ObjReader2(0).ToString()), 2)
                        vector_rep(0) = Val(lblValRep1)
                        lblValRep1_0 = formateo((ObjReader2(1).ToString()), 2)
                        lblValRep2 = formateo((ObjReader2(2).ToString()), 2)
                        vector_rep(1) = Val(lblValRep2)
                        lblValRep2_0 = formateo((ObjReader2(3).ToString()), 2)
                        lblValRep3 = formateo((ObjReader2(4).ToString()), 2)
                        vector_rep(2) = Val(lblValRep3)
                        lblValRep3_0 = formateo((ObjReader2(5).ToString()), 2)
                        lblValRep4 = formateo((ObjReader2(6).ToString()), 2)
                        vector_rep(3) = Val(lblValRep4)
                        lblValRep4_0 = formateo((ObjReader2(7).ToString()), 2)
                        lblValRep5 = formateo((ObjReader2(8).ToString()), 2)
                        vector_rep(4) = Val(lblValRep5)
                        lblValRep5_0 = formateo((ObjReader2(9).ToString()), 2)
                        lblValRep6 = formateo((ObjReader2(10).ToString()), 2)
                        vector_rep(5) = Val(lblValRep6)
                        lblValRep6_0 = formateo((ObjReader2(11).ToString()), 2)
                    End While
                    ObjReader2.Close()
                End While
                ObjReader1.Close()
                Dim min As Double
                For i = 0 To vector_rep.Length - 1
                    If vector_rep(i) > max Then
                        max = vector_rep(i)
                    End If
                Next
                min = max
                For i = 0 To vector_rep.Length - 1
                    If vector_rep(i) < min Then
                        min = vector_rep(i)
                    End If
                Next
                'para la desviación estandar:
                'Dim s As Double
                'For i = 0 To vector_rep.Length - 1
                '    s += vector_rep(i)
                'Next
                'Dim p As Double = s / (vector_rep.Length)
                's = 0
                'For i = 0 To vector_rep.Length - 1
                '    s += vector_rep(i) - p
                'Next
                'Dim d As Double = s / (vector_rep.Length)
                Dim vector(5) As Double
                For j = 0 To vector.Length - 1
                    vector(j) = Val(vector_rep(j))
                Next j
                Dim desviacion As Double
                desviacion = DevStd(vector)
                lblIncertidumbreRep = desviacion.ToString("0.000000")
                lblValDifMaxRep_pc = formateo((max - min), 2)
                lblValEmpRep_pc = emp(lblCargaRep)
                lblCumpleRep_pc = satisface(lblValDifMaxRep_pc, lblValEmpRep_pc)
                '' ''Para la prueba de linealidad
                'Calculamos el total de registros de la prueba de linealidad para dar la dimensión a los vectores
                Dim dimension As Integer = 0
                Dim str7 As String = "SELECT count(PCarga_Cab.IdeComBpr) FROM PCarga_Cab WHERE PCarga_Cab.IdeComBpr = '" & IdeComBpr & "'"
                Dim ObjCmd_e As SqlCommand = New SqlCommand(str7, ccn)
                Dim ObjReader_e = ObjCmd_e.ExecuteReader
                While (ObjReader_e.Read())
                    dimension = Val((ObjReader_e(0).ToString()))
                End While
                ObjReader_e.Close()
                'Redimensionamos vectores
                ReDim vector_IncertHisteresis(dimension - 1)
                ReDim vector_nominal(dimension - 1)
                ReDim vector_convencional(dimension - 1)
                ReDim vector_numeral(dimension - 1)
                ReDim vector_u_std_patron(dimension - 1)
                ReDim vector_emp_patron(dimension - 1)
                ReDim vector_u_deriva_patron(dimension - 1)
                ReDim vector_lecasc(dimension - 1)
                ReDim vector_errasc(dimension - 1)
                ReDim vector_lecdsc(dimension - 1)
                ReDim vector_errdsc(dimension - 1)
                ReDim k(dimension - 1)
                ReDim U_reporte(dimension - 1)
                ReDim es_sustitucion(dimension - 1)
                ReDim vector_uref(dimension - 1)

                Dim cont As Integer = 1
                Dim StrSql As String = "SELECT PCarga_Cab.IdeComBpr,PCarga_Cab.NumPca,PCarga_Cab.CarPca," & _
                                     "PCarga_Det.LecAscPca,PCarga_Det.LecDscPca,PCarga_Det.ErrAscPca," & _
                                     "PCarga_Det.ErrDscPca,PCarga_Det.EmpPca,PCarga_Det.SatPca_D " & _
                                     "FROM PCarga_Cab INNER JOIN PCarga_Det ON dbo.PCarga_Cab.CodPca_C = dbo.PCarga_Det.CodPca_C " & _
                                     "WHERE PCarga_Cab.IdeComBpr = '" & IdeComBpr & "'"
                Dim ObjCmd_a As SqlCommand = New SqlCommand(StrSql, ccn)
                Dim ObjReader_a = ObjCmd_a.ExecuteReader
                'Inicializamos la variable que controlará la posición de los vectores
                Dim pos_vector As Integer = 0
                'Inicializamos la variable que verifica si existe al menos una iteración "NO SATISFACTORIA" lo que convertiría a toda la prueba como NO SATISFACTORIA. 
                Dim satisface_crg As Boolean = True
                While (ObjReader_a.Read())
                    'masa convencional
                    Dim masac As Double = 0
                    Dim masac_eii As Double = 0 'masa convencional prueba de excentricidad
                    'incertidumbre estándar del patrón
                    Dim inc_std_pat As Double = 0
                    Dim inc_std_pat_eii As Double = 0 'incertidumbre estándar del patrón prueba de excentricidad
                    'emp del patrón
                    Dim emp_pat As Double = 0
                    Dim emp_pat_eii As Double = 0 'emp del patrón prueba de excentricidad
                    'incertidumbre de deriva del patrón
                    Dim inc_der_pat As Double = 0
                    Dim inc_der_pat_eii As Double = 0 'incertidumbre de deriva del patrón prueba de excentricidad
                    'Dim sustitucion As String = "" 'identifica si el registro tiene carga de sustitución

                    Dim selector As String = "C" & (ObjReader_a(1).ToString()) & "+"
                    Dim str4 As String = "select NonCerPxp,TipPxp,sum(N1),sum(N2),sum(N2A),sum(N5),sum(N10),sum(N20),sum(N20A),sum(N50),sum(N100)" & _
                                         ",sum(N200),sum(N200A),sum(N500),sum(N1000),sum(N2000),sum(N2000A),sum(N5000),sum(N10000)" & _
                                         ",sum(N20000),sum(N500000) " & _
                                         "from Pesxpro " & _
                                         "where IdeComBpr='" & IdeComBpr & "' and (TipPxp like '" & selector & "' or TipPxp='EII1') group by NonCerPxp,TipPxp"
                    Dim ObjCmd_b As SqlCommand = New SqlCommand(str4, ccn)
                    Dim ObjReader_b = ObjCmd_b.ExecuteReader
                    While (ObjReader_b.Read())
                        Dim certif, tipo, n1, n2, n2a, n5, n10, n20, n20a, n50, n100, n200, n200a, n500, n1000,
                            n2000, n2000a, n5000, n10000, n20000, n500000 As String
                        certif = (ObjReader_b(0).ToString())
                        tipo = (ObjReader_b(1).ToString())
                        n1 = (ObjReader_b(2).ToString())
                        n2 = (ObjReader_b(3).ToString())
                        n2a = (ObjReader_b(4).ToString())
                        n5 = (ObjReader_b(5).ToString())
                        n10 = (ObjReader_b(6).ToString())
                        n20 = (ObjReader_b(7).ToString())
                        n20a = (ObjReader_b(8).ToString())
                        n50 = (ObjReader_b(9).ToString())
                        n100 = (ObjReader_b(10).ToString())
                        n200 = (ObjReader_b(11).ToString())
                        n200a = (ObjReader_b(12).ToString())
                        n500 = (ObjReader_b(13).ToString())
                        n1000 = (ObjReader_b(14).ToString())
                        n2000 = (ObjReader_b(15).ToString())
                        n2000a = (ObjReader_b(16).ToString())
                        n5000 = (ObjReader_b(17).ToString())
                        n10000 = (ObjReader_b(18).ToString())
                        n20000 = (ObjReader_b(19).ToString())
                        n500000 = (ObjReader_b(20).ToString())
                        'sumsust = (ObjReader_b(21).ToString())
                        'If Val(sumsust) = 0 Then
                        '    sustitucion = "no"
                        'Else
                        '    sustitucion = "si"
                        'End If
                        If Val(n1) > 0 Then
                            Dim valor As String = "1"
                            Dim str5 As String = "select " & Val(n1) & "*(MasCon)," & Val(n1) & "*(ErrMaxPer)," & Val(n1) & "*(power(IncEst,2))," & Val(n1) & "*(power(IncDer,2)) " & _
                                                 "from Certificados " & _
                                                 "where ValCer = '" & valor & "' and NomCer = '" & certif & "'"
                            Dim ObjCmd_c As SqlCommand = New SqlCommand(str5, ccn)
                            Dim ObjReader_c = ObjCmd_c.ExecuteReader
                            While (ObjReader_c.Read())
                                If tipo = "EII1" Then
                                    masac_eii = masac_eii + Val(ObjReader_c(0).ToString())
                                    emp_pat_eii = emp_pat_eii + Val(ObjReader_c(1).ToString())
                                    inc_std_pat_eii = inc_std_pat_eii + Val(ObjReader_c(2).ToString())
                                    inc_der_pat_eii = inc_der_pat_eii + Val(ObjReader_c(3).ToString())
                                Else
                                    masac = masac + Val(ObjReader_c(0).ToString())
                                    emp_pat = emp_pat + Val(ObjReader_c(1).ToString())
                                    inc_std_pat = inc_std_pat + Val(ObjReader_c(2).ToString())
                                    inc_der_pat = inc_der_pat + Val(ObjReader_c(3).ToString())
                                End If
                            End While
                            ObjReader_c.Close()
                        End If
                        If Val(n2) > 0 Then
                            Dim valor As String = "2"
                            Dim str5 As String = "select " & Val(n2) & "*(MasCon)," & Val(n2) & "*(ErrMaxPer)," & Val(n2) & "*(power(IncEst,2))," & Val(n2) & "*(power(IncDer,2)) " & _
                                                 "from Certificados " & _
                                                 "where ValCer = '" & valor & "' and NomCer = '" & certif & "'"
                            Dim ObjCmd_c As SqlCommand = New SqlCommand(str5, ccn)
                            Dim ObjReader_c = ObjCmd_c.ExecuteReader
                            While (ObjReader_c.Read())
                                If tipo = "EII1" Then
                                    masac_eii = masac_eii + Val(ObjReader_c(0).ToString())
                                    emp_pat_eii = emp_pat_eii + Val(ObjReader_c(1).ToString())
                                    inc_std_pat_eii = inc_std_pat_eii + Val(ObjReader_c(2).ToString())
                                    inc_der_pat_eii = inc_der_pat_eii + Val(ObjReader_c(3).ToString())
                                Else
                                    masac = masac + Val(ObjReader_c(0).ToString())
                                    emp_pat = emp_pat + Val(ObjReader_c(1).ToString())
                                    inc_std_pat = inc_std_pat + Val(ObjReader_c(2).ToString())
                                    inc_der_pat = inc_der_pat + Val(ObjReader_c(3).ToString())
                                End If
                            End While
                            ObjReader_c.Close()
                        End If
                        If Val(n2a) > 0 Then
                            Dim valor As String = "2*"
                            Dim str5 As String = "select " & Val(n2a) & "*(MasCon)," & Val(n2a) & "*(ErrMaxPer)," & Val(n2a) & "*(power(IncEst,2))," & Val(n2a) & "*(power(IncDer,2)) " & _
                                                 "from Certificados " & _
                                                 "where ValCer = '" & valor & "' and NomCer = '" & certif & "'"
                            Dim ObjCmd_c As SqlCommand = New SqlCommand(str5, ccn)
                            Dim ObjReader_c = ObjCmd_c.ExecuteReader
                            While (ObjReader_c.Read())
                                If tipo = "EII1" Then
                                    masac_eii = masac_eii + Val(ObjReader_c(0).ToString())
                                    emp_pat_eii = emp_pat_eii + Val(ObjReader_c(1).ToString())
                                    inc_std_pat_eii = inc_std_pat_eii + Val(ObjReader_c(2).ToString())
                                    inc_der_pat_eii = inc_der_pat_eii + Val(ObjReader_c(3).ToString())
                                Else
                                    masac = masac + Val(ObjReader_c(0).ToString())
                                    emp_pat = emp_pat + Val(ObjReader_c(1).ToString())
                                    inc_std_pat = inc_std_pat + Val(ObjReader_c(2).ToString())
                                    inc_der_pat = inc_der_pat + Val(ObjReader_c(3).ToString())
                                End If
                            End While
                            ObjReader_c.Close()
                        End If
                        If Val(n5) > 0 Then
                            Dim valor As String = "5"
                            Dim str5 As String = "select " & Val(n5) & "*(MasCon)," & Val(n5) & "*(ErrMaxPer)," & Val(n5) & "*(power(IncEst,2))," & Val(n5) & "*(power(IncDer,2)) " & _
                                                 "from Certificados " & _
                                                 "where ValCer = '" & valor & "' and NomCer = '" & certif & "'"
                            Dim ObjCmd_c As SqlCommand = New SqlCommand(str5, ccn)
                            Dim ObjReader_c = ObjCmd_c.ExecuteReader
                            While (ObjReader_c.Read())
                                If tipo = "EII1" Then
                                    masac_eii = masac_eii + Val(ObjReader_c(0).ToString())
                                    emp_pat_eii = emp_pat_eii + Val(ObjReader_c(1).ToString())
                                    inc_std_pat_eii = inc_std_pat_eii + Val(ObjReader_c(2).ToString())
                                    inc_der_pat_eii = inc_der_pat_eii + Val(ObjReader_c(3).ToString())
                                Else
                                    masac = masac + Val(ObjReader_c(0).ToString())
                                    emp_pat = emp_pat + Val(ObjReader_c(1).ToString())
                                    inc_std_pat = inc_std_pat + Val(ObjReader_c(2).ToString())
                                    inc_der_pat = inc_der_pat + Val(ObjReader_c(3).ToString())
                                End If
                            End While
                            ObjReader_c.Close()
                        End If
                        If Val(n10) > 0 Then
                            Dim valor As String = "10"
                            Dim str5 As String = "select " & Val(n10) & "*(MasCon)," & Val(n10) & "*(ErrMaxPer)," & Val(n10) & "*(power(IncEst,2))," & Val(n10) & "*(power(IncDer,2)) " & _
                                                 "from Certificados " & _
                                                 "where ValCer = '" & valor & "' and NomCer = '" & certif & "'"
                            Dim ObjCmd_c As SqlCommand = New SqlCommand(str5, ccn)
                            Dim ObjReader_c = ObjCmd_c.ExecuteReader
                            While (ObjReader_c.Read())
                                If tipo = "EII1" Then
                                    masac_eii = masac_eii + Val(ObjReader_c(0).ToString())
                                    emp_pat_eii = emp_pat_eii + Val(ObjReader_c(1).ToString())
                                    inc_std_pat_eii = inc_std_pat_eii + Val(ObjReader_c(2).ToString())
                                    inc_der_pat_eii = inc_der_pat_eii + Val(ObjReader_c(3).ToString())
                                Else
                                    masac = masac + Val(ObjReader_c(0).ToString())
                                    emp_pat = emp_pat + Val(ObjReader_c(1).ToString())
                                    inc_std_pat = inc_std_pat + Val(ObjReader_c(2).ToString())
                                    inc_der_pat = inc_der_pat + Val(ObjReader_c(3).ToString())
                                End If
                            End While
                            ObjReader_c.Close()
                        End If
                        If Val(n20) > 0 Then
                            Dim valor As String = "20"
                            Dim str5 As String = "select " & Val(n20) & "*(MasCon)," & Val(n20) & "*(ErrMaxPer)," & Val(n20) & "*(power(IncEst,2))," & Val(n20) & "*(power(IncDer,2)) " & _
                                                 "from Certificados " & _
                                                 "where ValCer = '" & valor & "' and NomCer = '" & certif & "'"
                            Dim ObjCmd_c As SqlCommand = New SqlCommand(str5, ccn)
                            Dim ObjReader_c = ObjCmd_c.ExecuteReader
                            While (ObjReader_c.Read())
                                If tipo = "EII1" Then
                                    masac_eii = masac_eii + Val(ObjReader_c(0).ToString())
                                    emp_pat_eii = emp_pat_eii + Val(ObjReader_c(1).ToString())
                                    inc_std_pat_eii = inc_std_pat_eii + Val(ObjReader_c(2).ToString())
                                    inc_der_pat_eii = inc_der_pat_eii + Val(ObjReader_c(3).ToString())
                                Else
                                    masac = masac + Val(ObjReader_c(0).ToString())
                                    emp_pat = emp_pat + Val(ObjReader_c(1).ToString())
                                    inc_std_pat = inc_std_pat + Val(ObjReader_c(2).ToString())
                                    inc_der_pat = inc_der_pat + Val(ObjReader_c(3).ToString())
                                End If
                            End While
                            ObjReader_c.Close()
                        End If
                        If Val(n20a) > 0 Then
                            Dim valor As String = "20*"
                            Dim str5 As String = "select " & Val(n20a) & "*(MasCon)," & Val(n20a) & "*(ErrMaxPer)," & Val(n20a) & "*(power(IncEst,2))," & Val(n20a) & "*(power(IncDer,2)) " & _
                                                 "from Certificados " & _
                                                 "where ValCer = '" & valor & "' and NomCer = '" & certif & "'"
                            Dim ObjCmd_c As SqlCommand = New SqlCommand(str5, ccn)
                            Dim ObjReader_c = ObjCmd_c.ExecuteReader
                            While (ObjReader_c.Read())
                                If tipo = "EII1" Then
                                    masac_eii = masac_eii + Val(ObjReader_c(0).ToString())
                                    emp_pat_eii = emp_pat_eii + Val(ObjReader_c(1).ToString())
                                    inc_std_pat_eii = inc_std_pat_eii + Val(ObjReader_c(2).ToString())
                                    inc_der_pat_eii = inc_der_pat_eii + Val(ObjReader_c(3).ToString())
                                Else
                                    masac = masac + Val(ObjReader_c(0).ToString())
                                    emp_pat = emp_pat + Val(ObjReader_c(1).ToString())
                                    inc_std_pat = inc_std_pat + Val(ObjReader_c(2).ToString())
                                    inc_der_pat = inc_der_pat + Val(ObjReader_c(3).ToString())
                                End If
                            End While
                            ObjReader_c.Close()
                        End If
                        If Val(n50) > 0 Then
                            Dim valor As String = "50"
                            Dim str5 As String = "select " & Val(n50) & "*(MasCon)," & Val(n50) & "*(ErrMaxPer)," & Val(n50) & "*(power(IncEst,2))," & Val(n50) & "*(power(IncDer,2)) " & _
                                                 "from Certificados " & _
                                                 "where ValCer = '" & valor & "' and NomCer = '" & certif & "'"
                            Dim ObjCmd_c As SqlCommand = New SqlCommand(str5, ccn)
                            Dim ObjReader_c = ObjCmd_c.ExecuteReader
                            While (ObjReader_c.Read())
                                If tipo = "EII1" Then
                                    masac_eii = masac_eii + Val(ObjReader_c(0).ToString())
                                    emp_pat_eii = emp_pat_eii + Val(ObjReader_c(1).ToString())
                                    inc_std_pat_eii = inc_std_pat_eii + Val(ObjReader_c(2).ToString())
                                    inc_der_pat_eii = inc_der_pat_eii + Val(ObjReader_c(3).ToString())
                                Else
                                    masac = masac + Val(ObjReader_c(0).ToString())
                                    emp_pat = emp_pat + Val(ObjReader_c(1).ToString())
                                    inc_std_pat = inc_std_pat + Val(ObjReader_c(2).ToString())
                                    inc_der_pat = inc_der_pat + Val(ObjReader_c(3).ToString())
                                End If
                            End While
                            ObjReader_c.Close()
                        End If
                        If Val(n100) > 0 Then
                            Dim valor As String = "100"
                            Dim str5 As String = "select " & Val(n100) & "*(MasCon)," & Val(n100) & "*(ErrMaxPer)," & Val(n100) & "*(power(IncEst,2))," & Val(n100) & "*(power(IncDer,2)) " & _
                                                 "from Certificados " & _
                                                 "where ValCer = '" & valor & "' and NomCer = '" & certif & "'"
                            Dim ObjCmd_c As SqlCommand = New SqlCommand(str5, ccn)
                            Dim ObjReader_c = ObjCmd_c.ExecuteReader
                            While (ObjReader_c.Read())
                                If tipo = "EII1" Then
                                    masac_eii = masac_eii + Val(ObjReader_c(0).ToString())
                                    emp_pat_eii = emp_pat_eii + Val(ObjReader_c(1).ToString())
                                    inc_std_pat_eii = inc_std_pat_eii + Val(ObjReader_c(2).ToString())
                                    inc_der_pat_eii = inc_der_pat_eii + Val(ObjReader_c(3).ToString())
                                Else
                                    masac = masac + Val(ObjReader_c(0).ToString())
                                    emp_pat = emp_pat + Val(ObjReader_c(1).ToString())
                                    inc_std_pat = inc_std_pat + Val(ObjReader_c(2).ToString())
                                    inc_der_pat = inc_der_pat + Val(ObjReader_c(3).ToString())
                                End If
                            End While
                            ObjReader_c.Close()
                        End If
                        If Val(n200) > 0 Then
                            Dim valor As String = "200"
                            Dim str5 As String = "select " & Val(n200) & "*(MasCon)," & Val(n200) & "*(ErrMaxPer)," & Val(n200) & "*(power(IncEst,2))," & Val(n200) & "*(power(IncDer,2)) " & _
                                                 "from Certificados " & _
                                                 "where ValCer = '" & valor & "' and NomCer = '" & certif & "'"
                            Dim ObjCmd_c As SqlCommand = New SqlCommand(str5, ccn)
                            Dim ObjReader_c = ObjCmd_c.ExecuteReader
                            While (ObjReader_c.Read())
                                If tipo = "EII1" Then
                                    masac_eii = masac_eii + Val(ObjReader_c(0).ToString())
                                    emp_pat_eii = emp_pat_eii + Val(ObjReader_c(1).ToString())
                                    inc_std_pat_eii = inc_std_pat_eii + Val(ObjReader_c(2).ToString())
                                    inc_der_pat_eii = inc_der_pat_eii + Val(ObjReader_c(3).ToString())
                                Else
                                    masac = masac + Val(ObjReader_c(0).ToString())
                                    emp_pat = emp_pat + Val(ObjReader_c(1).ToString())
                                    inc_std_pat = inc_std_pat + Val(ObjReader_c(2).ToString())
                                    inc_der_pat = inc_der_pat + Val(ObjReader_c(3).ToString())
                                End If
                            End While
                            ObjReader_c.Close()
                        End If
                        If Val(n200a) > 0 Then
                            Dim valor As String = "200*"
                            Dim str5 As String = "select " & Val(n200a) & "*(MasCon)," & Val(n200a) & "*(ErrMaxPer)," & Val(n200a) & "*(power(IncEst,2))," & Val(n200a) & "*(power(IncDer,2)) " & _
                                                 "from Certificados " & _
                                                 "where ValCer = '" & valor & "' and NomCer = '" & certif & "'"
                            Dim ObjCmd_c As SqlCommand = New SqlCommand(str5, ccn)
                            Dim ObjReader_c = ObjCmd_c.ExecuteReader
                            While (ObjReader_c.Read())
                                If tipo = "EII1" Then
                                    masac_eii = masac_eii + Val(ObjReader_c(0).ToString())
                                    emp_pat_eii = emp_pat_eii + Val(ObjReader_c(1).ToString())
                                    inc_std_pat_eii = inc_std_pat_eii + Val(ObjReader_c(2).ToString())
                                    inc_der_pat_eii = inc_der_pat_eii + Val(ObjReader_c(3).ToString())
                                Else
                                    masac = masac + Val(ObjReader_c(0).ToString())
                                    emp_pat = emp_pat + Val(ObjReader_c(1).ToString())
                                    inc_std_pat = inc_std_pat + Val(ObjReader_c(2).ToString())
                                    inc_der_pat = inc_der_pat + Val(ObjReader_c(3).ToString())
                                End If
                            End While
                            ObjReader_c.Close()
                        End If
                        If Val(n500) > 0 Then
                            Dim valor As String = "500"
                            Dim str5 As String = "select " & Val(n500) & "*(MasCon)," & Val(n500) & "*(ErrMaxPer)," & Val(n500) & "*(power(IncEst,2))," & Val(n500) & "*(power(IncDer,2)) " & _
                                                 "from Certificados " & _
                                                 "where ValCer = '" & valor & "' and NomCer = '" & certif & "'"
                            Dim ObjCmd_c As SqlCommand = New SqlCommand(str5, ccn)
                            Dim ObjReader_c = ObjCmd_c.ExecuteReader
                            While (ObjReader_c.Read())
                                If tipo = "EII1" Then
                                    masac_eii = masac_eii + Val(ObjReader_c(0).ToString())
                                    emp_pat_eii = emp_pat_eii + Val(ObjReader_c(1).ToString())
                                    inc_std_pat_eii = inc_std_pat_eii + Val(ObjReader_c(2).ToString())
                                    inc_der_pat_eii = inc_der_pat_eii + Val(ObjReader_c(3).ToString())
                                Else
                                    masac = masac + Val(ObjReader_c(0).ToString())
                                    emp_pat = emp_pat + Val(ObjReader_c(1).ToString())
                                    inc_std_pat = inc_std_pat + Val(ObjReader_c(2).ToString())
                                    inc_der_pat = inc_der_pat + Val(ObjReader_c(3).ToString())
                                End If
                            End While
                            ObjReader_c.Close()
                        End If
                        If Val(n1000) > 0 Then
                            Dim valor As String = "1000"
                            Dim str5 As String = "select " & Val(n1000) & "*(MasCon)," & Val(n1000) & "*(ErrMaxPer)," & Val(n1000) & "*(power(IncEst,2))," & Val(n1000) & "*(power(IncDer,2)) " & _
                                                 "from Certificados " & _
                                                 "where ValCer = '" & valor & "' and NomCer = '" & certif & "'"
                            Dim ObjCmd_c As SqlCommand = New SqlCommand(str5, ccn)
                            Dim ObjReader_c = ObjCmd_c.ExecuteReader
                            While (ObjReader_c.Read())
                                If tipo = "EII1" Then
                                    masac_eii = masac_eii + Val(ObjReader_c(0).ToString())
                                    emp_pat_eii = emp_pat_eii + Val(ObjReader_c(1).ToString())
                                    inc_std_pat_eii = inc_std_pat_eii + Val(ObjReader_c(2).ToString())
                                    inc_der_pat_eii = inc_der_pat_eii + Val(ObjReader_c(3).ToString())
                                Else
                                    masac = masac + Val(ObjReader_c(0).ToString())
                                    emp_pat = emp_pat + Val(ObjReader_c(1).ToString())
                                    inc_std_pat = inc_std_pat + Val(ObjReader_c(2).ToString())
                                    inc_der_pat = inc_der_pat + Val(ObjReader_c(3).ToString())
                                End If
                            End While
                            ObjReader_c.Close()
                        End If
                        If Val(n2000) > 0 Then
                            Dim valor As String = "2000"
                            Dim str5 As String = "select " & Val(n2000) & "*(MasCon)," & Val(n2000) & "*(ErrMaxPer)," & Val(n2000) & "*(power(IncEst,2))," & Val(n2000) & "*(power(IncDer,2)) " & _
                                                 "from Certificados " & _
                                                 "where ValCer = '" & valor & "' and NomCer = '" & certif & "'"
                            Dim ObjCmd_c As SqlCommand = New SqlCommand(str5, ccn)
                            Dim ObjReader_c = ObjCmd_c.ExecuteReader
                            While (ObjReader_c.Read())
                                If tipo = "EII1" Then
                                    masac_eii = masac_eii + Val(ObjReader_c(0).ToString())
                                    emp_pat_eii = emp_pat_eii + Val(ObjReader_c(1).ToString())
                                    inc_std_pat_eii = inc_std_pat_eii + Val(ObjReader_c(2).ToString())
                                    inc_der_pat_eii = inc_der_pat_eii + Val(ObjReader_c(3).ToString())
                                Else
                                    masac = masac + Val(ObjReader_c(0).ToString())
                                    emp_pat = emp_pat + Val(ObjReader_c(1).ToString())
                                    inc_std_pat = inc_std_pat + Val(ObjReader_c(2).ToString())
                                    inc_der_pat = inc_der_pat + Val(ObjReader_c(3).ToString())
                                End If
                            End While
                            ObjReader_c.Close()
                        End If
                        If Val(n2000a) > 0 Then
                            Dim valor As String = "2000*"
                            Dim str5 As String = "select " & Val(n2000a) & "*(MasCon)," & Val(n2000a) & "*(ErrMaxPer)," & Val(n2000a) & "*(power(IncEst,2))," & Val(n2000a) & "*(power(IncDer,2)) " & _
                                                 "from Certificados " & _
                                                 "where ValCer = '" & valor & "' and NomCer = '" & certif & "'"
                            Dim ObjCmd_c As SqlCommand = New SqlCommand(str5, ccn)
                            Dim ObjReader_c = ObjCmd_c.ExecuteReader
                            While (ObjReader_c.Read())
                                If tipo = "EII1" Then
                                    masac_eii = masac_eii + Val(ObjReader_c(0).ToString())
                                    emp_pat_eii = emp_pat_eii + Val(ObjReader_c(1).ToString())
                                    inc_std_pat_eii = inc_std_pat_eii + Val(ObjReader_c(2).ToString())
                                    inc_der_pat_eii = inc_der_pat_eii + Val(ObjReader_c(3).ToString())
                                Else
                                    masac = masac + Val(ObjReader_c(0).ToString())
                                    emp_pat = emp_pat + Val(ObjReader_c(1).ToString())
                                    inc_std_pat = inc_std_pat + Val(ObjReader_c(2).ToString())
                                    inc_der_pat = inc_der_pat + Val(ObjReader_c(3).ToString())
                                End If
                            End While
                            ObjReader_c.Close()
                        End If
                        If Val(n5000) > 0 Then
                            Dim valor As String = "5"
                            Dim str5 As String = "select " & Val(n5000) & "*(MasCon)," & Val(n5000) & "*(ErrMaxPer)," & Val(n5000) & "*(power(IncEst,2))," & Val(n5000) & "*(power(IncDer,2)) " & _
                                                 "from Certificados " & _
                                                 "where ValCer = '" & valor & "' and NomCer = '" & certif & "'"
                            Dim ObjCmd_c As SqlCommand = New SqlCommand(str5, ccn)
                            Dim ObjReader_c = ObjCmd_c.ExecuteReader
                            While (ObjReader_c.Read())
                                If tipo = "EII1" Then
                                    masac_eii = masac_eii + Val(ObjReader_c(0).ToString())
                                    emp_pat_eii = emp_pat_eii + Val(ObjReader_c(1).ToString())
                                    inc_std_pat_eii = inc_std_pat_eii + Val(ObjReader_c(2).ToString())
                                    inc_der_pat_eii = inc_der_pat_eii + Val(ObjReader_c(3).ToString())
                                Else
                                    masac = masac + Val(ObjReader_c(0).ToString())
                                    emp_pat = emp_pat + Val(ObjReader_c(1).ToString())
                                    inc_std_pat = inc_std_pat + Val(ObjReader_c(2).ToString())
                                    inc_der_pat = inc_der_pat + Val(ObjReader_c(3).ToString())
                                End If
                            End While
                            ObjReader_c.Close()
                        End If
                        If Val(n10000) > 0 Then
                            Dim valor As String = "10"
                            Dim str5 As String = "select " & Val(n10000) & "*(MasCon)," & Val(n10000) & "*(ErrMaxPer)," & Val(n10000) & "*(power(IncEst,2))," & Val(n10000) & "*(power(IncDer,2)) " & _
                                                 "from Certificados " & _
                                                 "where ValCer = '" & valor & "' and NomCer = '" & certif & "'"
                            Dim ObjCmd_c As SqlCommand = New SqlCommand(str5, ccn)
                            Dim ObjReader_c = ObjCmd_c.ExecuteReader
                            While (ObjReader_c.Read())
                                If tipo = "EII1" Then
                                    masac_eii = masac_eii + Val(ObjReader_c(0).ToString())
                                    emp_pat_eii = emp_pat_eii + Val(ObjReader_c(1).ToString())
                                    inc_std_pat_eii = inc_std_pat_eii + Val(ObjReader_c(2).ToString())
                                    inc_der_pat_eii = inc_der_pat_eii + Val(ObjReader_c(3).ToString())
                                Else
                                    masac = masac + Val(ObjReader_c(0).ToString())
                                    emp_pat = emp_pat + Val(ObjReader_c(1).ToString())
                                    inc_std_pat = inc_std_pat + Val(ObjReader_c(2).ToString())
                                    inc_der_pat = inc_der_pat + Val(ObjReader_c(3).ToString())
                                End If
                            End While
                            ObjReader_c.Close()
                        End If
                        If Val(n20000) > 0 Then
                            Dim valor As String = "20"
                            Dim str5 As String = "select " & Val(n20000) & "*(MasCon)," & Val(n20000) & "*(ErrMaxPer)," & Val(n20000) & "*(power(IncEst,2))," & Val(n20000) & "*(power(IncDer,2)) " & _
                                                 "from Certificados " & _
                                                 "where ValCer = '" & valor & "' and NomCer = '" & certif & "'"
                            Dim ObjCmd_c As SqlCommand = New SqlCommand(str5, ccn)
                            Dim ObjReader_c = ObjCmd_c.ExecuteReader
                            While (ObjReader_c.Read())
                                If tipo = "EII1" Then
                                    masac_eii = masac_eii + Val(ObjReader_c(0).ToString())
                                    emp_pat_eii = emp_pat_eii + Val(ObjReader_c(1).ToString())
                                    inc_std_pat_eii = inc_std_pat_eii + Val(ObjReader_c(2).ToString())
                                    inc_der_pat_eii = inc_der_pat_eii + Val(ObjReader_c(3).ToString())
                                Else
                                    masac = masac + Val(ObjReader_c(0).ToString())
                                    emp_pat = emp_pat + Val(ObjReader_c(1).ToString())
                                    inc_std_pat = inc_std_pat + Val(ObjReader_c(2).ToString())
                                    inc_der_pat = inc_der_pat + Val(ObjReader_c(3).ToString())
                                End If
                            End While
                            ObjReader_c.Close()
                        End If
                        If Val(n500000) > 0 Then
                            Dim valor As String = "500"
                            Dim str5 As String = "select " & Val(n500000) & "*(MasCon)," & Val(n500000) & "*(ErrMaxPer)," & Val(n500000) & "*(power(IncEst,2))," & Val(n500000) & "*(power(IncDer,2)) " & _
                                                 "from Certificados " & _
                                                 "where ValCer = '" & valor & "' and NomCer = '" & certif & "'"
                            Dim ObjCmd_c As SqlCommand = New SqlCommand(str5, ccn)
                            Dim ObjReader_c = ObjCmd_c.ExecuteReader
                            While (ObjReader_c.Read())
                                If tipo = "EII1" Then
                                    masac_eii = masac_eii + Val(ObjReader_c(0).ToString())
                                    emp_pat_eii = emp_pat_eii + Val(ObjReader_c(1).ToString())
                                    inc_std_pat_eii = inc_std_pat_eii + Val(ObjReader_c(2).ToString())
                                    inc_der_pat_eii = inc_der_pat_eii + Val(ObjReader_c(3).ToString())
                                Else
                                    masac = masac + Val(ObjReader_c(0).ToString())
                                    emp_pat = emp_pat + Val(ObjReader_c(1).ToString())
                                    inc_std_pat = inc_std_pat + Val(ObjReader_c(2).ToString())
                                    inc_der_pat = inc_der_pat + Val(ObjReader_c(3).ToString())
                                End If
                            End While
                            ObjReader_c.Close()
                        End If
                    End While
                    ObjReader_b.Close()
                    Dim hmax As Double = 0
                    Dim emp_recal As Double = 0
                    vector_numeral(pos_vector) = Val((ObjReader_a(1).ToString()))
                    ' ''carga nominal
                    vector_nominal(pos_vector) = (ObjReader_a(2).ToString())
                    ''carga convencional
                    Dim campo_va As String = ""
                    If unidad = "[ g ]" Then
                        campo_va = masac
                    Else
                        campo_va = Val(masac) / 1000
                    End If
                    vector_convencional(pos_vector) = campo_va
                    'Llenamos los otros vectores (se hace aquí por conveniencia de memoria)
                    If unidad = "[ g ]" Then
                        vector_emp_patron(pos_vector) = emp_pat
                        vector_u_std_patron(pos_vector) = Math.Sqrt(inc_std_pat)
                        vector_u_deriva_patron(pos_vector) = Math.Sqrt(inc_der_pat)
                        crg_conv_eii = masac_eii
                        inc_patron_eii = Math.Sqrt(inc_std_pat_eii)
                        inc_deriva_eii = Math.Sqrt(inc_der_pat_eii)
                        emp_patron_eii = emp_pat_eii
                    Else
                        vector_emp_patron(pos_vector) = Val(emp_pat) / 1000
                        vector_u_std_patron(pos_vector) = Val(Math.Sqrt(inc_std_pat)) / 1000
                        vector_u_deriva_patron(pos_vector) = Val(Math.Sqrt(inc_der_pat)) / 1000
                        crg_conv_eii = masac_eii / 1000
                        inc_patron_eii = Val(Math.Sqrt(inc_std_pat_eii)) / 1000
                        inc_deriva_eii = Val(Math.Sqrt(inc_der_pat_eii)) / 1000
                        emp_patron_eii = Val(emp_pat_eii) / 1000
                    End If
                    'vector_emp_patron(pos_vector) = emp_pat
                    'vector_u_std_patron(pos_vector) = Math.Sqrt(inc_std_pat)
                    'vector_u_deriva_patron(pos_vector) = Math.Sqrt(inc_der_pat)
                    'es_sustitucion(pos_vector) = sustitucion
                    'crg_conv_eii = masac_eii
                    'inc_patron_eii = inc_std_pat_eii
                    'inc_deriva_eii = inc_der_pat_eii
                    'emp_patron_eii = emp_pat_eii
                    ' ''lectura ascendente
                    vector_lecasc(pos_vector) = formateo((ObjReader_a(3).ToString()), 2)
                    ' ''lectura descendente
                    vector_lecdsc(pos_vector) = formateo((ObjReader_a(4).ToString()), 2)
                    ' ''Error ascendente
                    vector_errasc(pos_vector) = formateo((ObjReader_a(5).ToString()), 2)
                    ' ''error descendente
                    vector_errdsc(pos_vector) = formateo((ObjReader_a(6).ToString()), 2)
                    ' ''Histeresis
                    Dim maxhisteresis As String = ""
                    Dim str6 As String = "select max(abs(PCarga_Det.LecDscPca-PCarga_Det.LecAscPca)) " & _
                                          "FROM PCarga_Cab INNER JOIN PCarga_Det ON dbo.PCarga_Cab.CodPca_C = dbo.PCarga_Det.CodPca_C " & _
                                          "WHERE PCarga_Cab.IdeComBpr ='" & IdeComBpr & "'"
                    Dim ObjCmd_d As SqlCommand = New SqlCommand(str6, ccn)
                    Dim ObjReader_d = ObjCmd_d.ExecuteReader
                    While (ObjReader_d.Read())
                        maxhisteresis = (ObjReader_d(0).ToString())
                    End While
                    ObjReader_d.Close()
                    Dim histeresis As Double = Val(Math.Abs(Val((ObjReader_a(4).ToString())) - Val((ObjReader_a(3).ToString()))))
                    If histeresis <= Val(maxhisteresis) Then
                        hmax = histeresis
                    Else
                        Dim cero As String = "0"
                        hmax = 0
                    End If
                    'carga de HMax
                    Dim carga_hmax As String = ""
                    ''tCell = New HtmlTableCell()
                    If hmax = 0 Then
                        Dim cero As String = "0"
                        carga_hmax = formateo(cero, 2)
                    Else
                        carga_hmax = masac.ToString
                    End If
                    ' ''evaluación de emp
                    ' ''cumplimiento
                    ' ''incertidumbre de histéresis
                    Dim incertidumbre_hist As Double = 0
                    If Val(carga_hmax) > 0 Then
                        incertidumbre_hist = histeresis / (2 * Math.Sqrt(3) * Val(carga_hmax))
                    Else
                        incertidumbre_hist = 0
                    End If
                    ''tCell.InnerText = formateo(incertidumbre_hist.ToString, 2)
                    ''tRow.Cells.Add(tCell)
                    vector_IncertHisteresis(pos_vector) = incertidumbre_hist
                    ''emp por recálculo
                    emp_recal = Val(emp(ObjReader_a(2).ToString()))
                    'cumplimiento por recálculo
                    Dim cumpli As String = ""
                    If (((Math.Abs(Val((ObjReader_a(5).ToString())))) <= emp_recal) And ((Math.Abs(Val((ObjReader_a(6).ToString())))) <= emp_recal)) Then
                        cumpli = "SATISFACTORIA"
                    Else
                        cumpli = "NO SATISFACTORIA"
                        satisface_crg = False
                    End If
                    'acrecentamos la variable que controla la posición de los vectores
                    pos_vector = pos_vector + 1
                End While
                ObjReader_a.Close()
                'obtenemos el valor mayor de la incetibumbre de histéresis
                Dim max_inc_hist As Double = 0
                For i = 0 To dimension - 1
                    If vector_IncertHisteresis(i) > max_inc_hist Then
                        max_inc_hist = vector_IncertHisteresis(i)
                    End If
                Next
                lblIncertidumbreHist = max_inc_hist.ToString("0.000000")
                If satisface_crg = True Then
                    lblSatisfaceCarga = "SATISFACTORIA"
                Else
                    lblSatisfaceCarga = "NO SATISFACTORIA"
                End If
                ' ''Para las Incertidumbres de Indicación y del patrón (creación de tabla HTML dinámica)
                'variables para llevar las sumas de cuadrados necesarias para la tabla siguiente
                Dim cuadrado_indicacion(dimension - 1) As Double
                Dim cuadrado_patron(dimension - 1) As Double
                For i = 0 To dimension - 1
                    ' ''µ(Res)
                    Dim u_res As Double = (valor_d / (2 * Math.Sqrt(3)))
                    cuadrado_indicacion(i) = cuadrado_indicacion(i) + (u_res ^ 2)
                    'µ(rept)=
                    cuadrado_indicacion(i) = cuadrado_indicacion(i) + (Val(lblIncertidumbreExct) ^ 2)
                    'µ(EXC)=
                    cuadrado_indicacion(i) = cuadrado_indicacion(i) + (Val(Val(lblIncertidumbreExct * Val(vector_nominal(i)))) ^ 2)
                    ' ''µ(Hist)=
                    cuadrado_indicacion(i) = cuadrado_indicacion(i) + (Val(Val(lblIncertidumbreHist * Val(vector_nominal(i)))) ^ 2)
                    ' ''µ(Res cero)
                    Dim u_res_cero As Double = (valor_d / (4 * Math.Sqrt(3)))
                    cuadrado_indicacion(i) = cuadrado_indicacion(i) + (Val(u_res_cero.ToString) ^ 2)
                    ' ''µ(pat) = ST
                    cuadrado_patron(i) = cuadrado_patron(i) + (vector_u_std_patron(i) ^ 2)
                    'e.m.p
                    'µ(mB)
                    Dim raizdetres As Double = Math.Sqrt(3)
                    Dim umb As Double = (((0.1 * 1.2 / 8000) + (vector_emp_patron(i) / (4 * vector_nominal(i)))) * vector_nominal(i) / raizdetres)
                    Dim umb_st As String = umb.ToString
                    If umb_st = "NaN" Then
                        umb = 0
                    End If
                    cuadrado_patron(i) = cuadrado_patron(i) + (umb ^ 2)
                    'µ(dmp)
                    cuadrado_patron(i) = cuadrado_patron(i) + (vector_u_deriva_patron(i) ^ 2)
                    'Δmconv
                    Dim ATC As Double = -20
                    Dim kv As Double = 0.000000119
                    Dim kh As Double = 0.0000000202
                    Dim engr As Double
                    If unidad = "[ g ]" Then
                        engr = Val(vector_convencional(i))
                    Else
                        engr = Val(vector_convencional(i)) * 1000
                    End If
                    Dim h7 As Double = engr ^ (3 / 4)
                    Dim h8 As Double = ATC / (Math.Abs(ATC) ^ (1 / 4))
                    Dim Ccv As Double = ((-1 * kv) * h7 * h8) - (kh * engr * ATC)
                    Dim u As Double = Ccv / Math.Sqrt(3)
                    Dim ccv_sal As Double = 0
                    Dim u_sal As Double = 0
                    If (unidad_base = "g") Then
                        ccv_sal = Ccv
                        u_sal = u
                    Else
                        ccv_sal = Ccv / 1000
                        u_sal = u / 1000
                    End If
                    'µ(dmconv)
                    cuadrado_patron(i) = cuadrado_patron(i) + ((ccv_sal / (Math.Sqrt(3))) ^ 2)
                Next
                'Para las Incertidumbres combinadas
                For i = 0 To dimension - 1
                    ' ''µ(mref)
                    Dim umref As String = ""
                    Dim aux2 As Double = vector_nominal(i)
                    If vector_nominal(i) <> 0 Then
                        umref = formateo(Math.Sqrt(cuadrado_patron(i)), 3)
                        umref_const = i
                        umref = formateo(Math.Sqrt(cuadrado_patron(i)), 3)
                    Else
                        umref = "0"
                    End If
                    vector_uref(i) = umref
                    'µ(Er)
                    Dim ui As Double = Math.Sqrt(cuadrado_indicacion(i)) ^ 2
                    Dim uref As Double = (vector_uref(i) ^ 2)
                    Dim uer(dimension - 1) As Double
                    uer(i) = Math.Sqrt(ui + uref)
                    'Oeff
                    Dim Oeff As Double = 0
                    If Val(lblIncertidumbreRep) > 0 Then
                        Oeff = uer(i) ^ 4 / (Val(lblIncertidumbreRep) ^ 4 / (2))
                    Else
                        Oeff = 9.0E+99
                    End If
                    'k
                    Dim entero As Integer
                    Dim dif As Integer
                    If Oeff = 9.0E+99 Then
                        entero = 0
                    Else
                        entero = Convert.ToInt32(Oeff)
                        If (entero > 20 And entero <= 25) Then
                            dif = 25 - entero
                            If dif <= 2 Then
                                entero = 25
                            Else
                                entero = 20
                            End If
                        ElseIf (entero > 25 And entero <= 30) Then
                            dif = 30 - entero
                            If dif <= 2 Then
                                entero = 30
                            Else
                                entero = 25
                            End If
                        ElseIf (entero > 30 And entero <= 35) Then
                            dif = 35 - entero
                            If dif <= 2 Then
                                entero = 35
                            Else
                                entero = 30
                            End If
                        ElseIf (entero > 35 And entero <= 40) Then
                            dif = 40 - entero
                            If dif <= 2 Then
                                entero = 40
                            Else
                                entero = 35
                            End If
                        ElseIf (entero > 40 And entero <= 45) Then
                            dif = 45 - entero
                            If dif <= 2 Then
                                entero = 45
                            Else
                                entero = 40
                            End If
                        ElseIf (entero > 45 And entero <= 50) Then
                            dif = 50 - entero
                            If dif <= 2 Then
                                entero = 50
                            Else
                                entero = 45
                            End If
                        ElseIf (entero > 50 And entero <= 100) Then
                            dif = 100 - entero
                            If dif <= 25 Then
                                entero = 100
                            Else
                                entero = 50
                            End If
                        ElseIf entero > 100 Then
                            entero = 100
                        End If
                    End If
                    Dim valk As String = ""
                    Dim str8 As String = "select val_k from grados_libertad where val_gdl=" & entero & ""
                    Dim ObjCmd_f As SqlCommand = New SqlCommand(str8, ccn)
                    Dim ObjReader_f = ObjCmd_f.ExecuteReader
                    While (ObjReader_f.Read())
                        valk = (ObjReader_f(0).ToString())
                    End While
                    valk = FormatNumber(Val(valk), 2).ToString
                    ObjReader_f.Close()
                    k(i) = valk
                    'U exp
                    U_reporte(i) = (uer(i) * k(i)).ToString("e1")
                Next
                'Para la tabla reporte
                Dim StrDres = "Delete from Results where IdeComBpr = '" & IdeComBpr & "'"
                Dim ObjWriter = New SqlDataAdapter()
                ObjWriter.InsertCommand = New SqlCommand(StrDres, ccn)
                ObjWriter.InsertCommand.ExecuteNonQuery()
                For i = 0 To dimension - 1
                    Dim Strres = "Insert into Results values ('" & IdeComBpr & "'," & Replace(Val(vector_numeral(i)), ",", ".") & "," & _
                    "" & Replace(vector_nominal(i), ",", ".") & "," & Replace(vector_lecasc(i), ",", ".") & "," & Replace(vector_errasc(i), ",", ".") & "," & _
                    "" & Replace(vector_lecdsc(i), ",", ".") & "," & Replace(vector_errdsc(i), ",", ".") & "," & Replace(k(i), ",", ".") & "," & Replace(U_reporte(i), ",", ".") & ")"
                    Dim ObjWriter2 = New SqlDataAdapter()
                    ObjWriter2.InsertCommand = New SqlCommand(Strres, ccn)
                    ObjWriter2.InsertCommand.ExecuteNonQuery()
                Next
                'Prueba de excentricidad para evaluación del proceso de calibración
                lblCarga_exct2 = lblCarga_exct2 & " " & unidad
                Str1 = "select CodEii_c,CarEii_c,SatEii_c " & _
                                     "from ExecII_Cab " & _
                                     "where IdeComBpr = '" & IdeComBpr & "' and PrbEii = 2"
                ObjCmd1 = New SqlCommand(Str1, ccn)
                ObjReader1 = ObjCmd1.ExecuteReader
                While (ObjReader1.Read())
                    lblValCarga_exct2 = formateo((ObjReader1(1).ToString()), 1)
                    Dim Str2 As String = "select Pos1Eii_d,Pos2Eii_d,Pos3Eii_d,Pos4Eii_d,Pos5Eii_d,ExecMaxEii_d,EmpEii_d " & _
                                         "from ExecII_Det " & _
                                         "where CodEii_c = " & (ObjReader1(0).ToString()) & ""
                    Dim ObjCmd2 As SqlCommand = New SqlCommand(Str2, ccn)
                    Dim ObjReader2 = ObjCmd2.ExecuteReader
                    While (ObjReader2.Read())
                        lblValPos1_2 = formateo((ObjReader2(0).ToString()), 1)
                        lblValPos2_2 = formateo((ObjReader2(1).ToString()), 1)
                        lblValPos3_2 = formateo((ObjReader2(2).ToString()), 1)
                        lblValPos4_2 = formateo((ObjReader2(3).ToString()), 1)
                        lblValPos5_2 = formateo((ObjReader2(4).ToString()), 1)
                        lblValExctMax2 = formateo((ObjReader2(5).ToString()), 2)
                        lblValEmpExct2 = formateo((ObjReader2(6).ToString()), 2)

                        lblDifPos1_2 = formateo(Val(lblValPos1_2) - Val(lblValPos1_2), 1)
                        vector_exct(0) = Val(lblDifPos1_2)
                        lblDifPos2_2 = formateo(Val(lblValPos1_2) - Val(lblValPos2_2), 1)
                        vector_exct(1) = Val(lblDifPos2_2)
                        lblDifPos3_2 = formateo(Val(lblValPos1_2) - Val(lblValPos3_2), 1)
                        vector_exct(2) = Val(lblDifPos3_2)
                        lblDifPos4_2 = formateo(Val(lblValPos1_2) - Val(lblValPos4_2), 1)
                        vector_exct(3) = Val(lblDifPos4_2)
                        lblDifPos5_2 = formateo(Val(lblValPos1_2) - Val(lblValPos5_2), 1)
                        vector_exct(4) = Val(lblDifPos5_2)
                    End While
                    ObjReader2.Close()
                    Dim incert As Double = Val(lblValExctMax2) / (2 * Val(lblValCarga_exct2) * Math.Sqrt(3))
                    lblIncertidumbreExct2 = incert.ToString("0.000000")
                End While
                ObjReader1.Close()
                Dim i_2 As Integer
                Dim max_2 As Double = 0
                For i_2 = 0 To vector_exct.Length - 1
                    If vector_exct(i_2) > max_2 Then
                        max_2 = vector_exct(i_2)
                    End If
                Next
                lblValExctMax_pc2 = formateo(max_2, 2)
                lblValEmpExct_pc2 = emp(lblValCarga_exct2)
                'Incertidumbre de indicación e incertidumbre del patrón de la prueba de excentricidad para evaluación del proceso de calibración 
                lblcrg_nom_eii = lblcrg_nom_eii & unidad
                lblvalcgrnomeii_1 = lblValCarga_exct
                lblvalcgrnomeii_2 = lblValCarga_exct2
                lblval_ures_eii_1 = formateo((valor_d / (2 * Math.Sqrt(3))), 2)
                lblval_ures_eii_2 = formateo((valor_d / (2 * Math.Sqrt(3))), 2)
                lblval_urept_eii_1 = "0.0"
                lblval_urept_eii_2 = "0.0"
                lblval_uexc_eii_1 = formateo(Val(lblValExctMax_pc) * Val(crg_conv_eii), 3)
                lblval_uexc_eii_2 = formateo(Val(lblValExctMax_pc2) * Val(crg_conv_eii), 3)
                lblval_uhist_eii_1 = "0.0"
                lblval_uhist_eii_2 = "0.0"
                lblval_urescero_eii_1 = formateo((valor_d / (4 * Math.Sqrt(3))), 2)
                lblval_urescero_eii_2 = formateo((valor_d / (4 * Math.Sqrt(3))), 2)

                lblval_crgpat_eii = lblValCarga_exct2
                lblval_upat_eii = Val(inc_patron_eii).ToString("e2")
                lblval_emppat_eii = Val(emp_patron_eii).ToString("e2")
                Dim raizdetreseii As Double = Math.Sqrt(3)
                Dim umbeii As Double = (((0.1 * 1.2 / 8000) + (Val(lblval_emppat_eii) / (4 * Val(lblValCarga_exct2)))) * Val(lblValCarga_exct) / raizdetreseii)
                lblval_umb_eii = umbeii.ToString("e5")
                lblval_udmp_eii = Val(inc_deriva_eii).ToString("e2")
                'cálculo de la convección
                Dim ATCeii As Double = -20
                Dim kveii As Double = 0.000000119
                Dim kheii As Double = 0.0000000202
                Dim engreii As Double
                If unidad = "[ g ]" Then
                    engreii = Val(crg_conv_eii)
                Else
                    engreii = Val(crg_conv_eii) * 1000
                End If
                Dim h7eii As Double = engreii ^ (3 / 4)
                Dim h8eii As Double = ATCeii / (Math.Abs(ATCeii) ^ (1 / 4))
                Dim Ccveii = ((-1 * kveii) * h7eii * h8eii) - (kheii * engreii * ATCeii)
                Dim ueii As Double = Ccveii / Math.Sqrt(3)
                Dim ccv_saleii As Double = 0
                Dim u_saleii As Double = 0
                If (unidad_base = "g") Then
                    ccv_saleii = Ccveii
                    u_saleii = ueii
                Else
                    ccv_saleii = Ccveii / 1000
                    u_saleii = ueii / 1000
                End If
                lblval_Amconv_eii = ccv_saleii.ToString("e4")
                lblval_udmconv_eii = ccv_saleii / (Math.Sqrt(3))
                'Cálculo del error normalizado
                lblUcert = "U " & unidad & " CERT."
                lblUprueb = "U " & unidad & " PRUEB."
                lblCrgNomErrNor = Val(lblValCarga_exct2).ToString("e1")
                lblErrExcMaxCerErrNor = Val(lblValExctMax_pc).ToString("e1")
                lblErrExcMaxPrueErrNor = Val(lblValExctMax_pc2).ToString("e1")
                Dim suma_cuad_cert As Double = (Val(lblvalcgrnomeii_1) ^ 2) + (Val(lblval_urescero_eii_1) ^ 2) + (Val(lblval_upat_eii) ^ 2) + (Val(lblval_umb_eii) ^ 2) + (Val(lblval_udmp_eii) ^ 2) + (Val(lblval_udmconv_eii) ^ 2)
                lblUCertErrNor = (2 * (Math.Sqrt(suma_cuad_cert))).ToString("e1")
                Dim suma_cuad_cert2 As Double = (Val(lblvalcgrnomeii_2) ^ 2) + (Val(lblval_urescero_eii_2) ^ 2) + (Val(lblval_upat_eii) ^ 2) + (Val(lblval_umb_eii) ^ 2) + (Val(lblval_udmp_eii) ^ 2) + (Val(lblval_udmconv_eii) ^ 2)
                lblUPruebErrNor = (2 * (Math.Sqrt(suma_cuad_cert2))).ToString("e1")
                Dim errnor As Double = Math.Abs(Val(lblErrExcMaxCerErrNor) - Val(lblErrExcMaxPrueErrNor)) / Math.Sqrt((Val(lblUCertErrNor) ^ 2) + (Val(lblUPruebErrNor) ^ 2))
                lblErrNor = errnor.ToString("e1")
                Dim errnrm = Replace(FormatNumber(errnor, 2), ",", "")

                Dim Str_eval As String = ""
                Str_eval = "update Balxpro set CmpExcBpr='" & lblCumpleExct_pc & "',CmpRepBpr='" & lblCumpleRep_pc & "',CmpCrgBpr='" & lblSatisfaceCarga & "' where IdeComBpr='" & IdeComBpr & "'"
                ObjWriter = New SqlDataAdapter()
                ObjWriter.InsertCommand = New SqlCommand(Str_eval, ccn)
                ObjWriter.InsertCommand.ExecuteNonQuery()

                Dim Str_estado As String = ""
                If lblCumpleExct_pc = "SATISFACTORIA" And lblCumpleRep_pc = "SATISFACTORIA" And lblSatisfaceCarga = "SATISFACTORIA" Then
                    Str_estado = "update Balxpro set est_esc='PI',ErrNrmBpr=" & errnrm & " where IdeComBpr='" & IdeComBpr & "'"
                Else
                    Str_estado = "update Balxpro set est_esc='PR',ErrNrmBpr=" & errnrm & " where IdeComBpr='" & IdeComBpr & "'"
                End If
                ObjWriter = New SqlDataAdapter()
                ObjWriter.InsertCommand = New SqlCommand(Str_estado, ccn)
                ObjWriter.InsertCommand.ExecuteNonQuery()
            End While
            ObjReader.Close()
            Exit Sub
        Catch ex As Exception
            Return
        End Try

    End Sub